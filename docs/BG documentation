1.	Въведение
Нашият проблем е разпознаване на обекти , по-специално , разпознаване на монети в естествени изображения. В даденото естествено входно изображение, може да има монети или само кръгове. Нашата задача е откриването само на монети във входното изображение. Съществуват няколко подхода за постигане на тази цел. Използването на известни техники за откриване на ръба може да бъде един възможен начин; Hough трансформиране е друг също би свършил работа за изпълнение на нашата цел. Тези техники, обаче, засичат само информацията за границите на целевите обекти, така че ние имаме нужда от фундаментално различен метод за откриване на монети в оригиналното изображение. Цветът може да бъде една от основните характеристики на монетите, но в този случай, ако даден образ е полутонов, тогава цветът не може да бъде най- уникалното по което да разпознаем монета. Текстурите на повърхността на монетите може да бъдат уникална характеристика на монетите, освен това, текстон се отнася до основните микро - структури в генерични естествени изображения, както и основните елементи в началото на визуалното възприятие. Нашият проблем е съставен от три части, като първата фаза е етап на откриване, втората фаза е Hough трансформация, а последният етап е текстон класификация. Тези фази ще бъдат обсъдени  по – нататък в документа.
2.	Откриване на ръб
Естествените изображения представляват поредица от пискели, с различни стойности за R, G и B. От гледна точка на опростяване на работата на Hough трансформацията, такова изображение не е подходящо за директна обработка. Трансофрамцията използва полутонови изображения, като за целта чрез всеки един пиксел определя линии и криви за правоъгълници и окръжности, затова готово изображение с определени ръбове ще е много полезно. В този пример операторът Sobel в OpenCV се използва  за откриване на ръбове. Преди обаче, да изполваме тази операция, е необходимо да изпълним няколко предварителни стъпки. Първо необходимо е RGB изображение да се проемни в полу-тоново. Новото изображение се филтрира от Гаусова операция за редуциране на „шум“. Едва след това полученото изображение се подлага на Sobel операция. Тази операция е лесна за имплементиране но откритите линии са много дебели. За Hough трансформация ни е необходимо намерените линии да са единични. Затова дебелите линии трябва да бъдат „потиснати“. Начинът, по който да постигнем това е да изберем най-добре съвпадащата линия между стойностите на пикселите на съседите. Сега, входно изображение е готово за Hough трансформация.
3.	Hough трансформация
Hough трансформацията е един много полезен инструмент, за да се намери модел в едно изображение, като линии и криви. С превръщането на една точка в пространство с параметър, лесно се разпознават модели. Особено това е добре за шумни и рядко дигитализирани изображения. Първо, една точка в един образ, която е открита като ръб, прави крива в параметричното пространство, 2-D за линии и 3-D за кръгове. Всеки път, когато една точка от изображението се предели за валиден кандидат за една линия или кръг, се обновява крива в параметричното пространство.
3.1.1.	Откриване на линия
От изображение, Hough трансформацията намира ръбове, които правят прави линии, без да се използва свързани или близки крайни точки. Много точки се получават на границата, когато процес на откриване на ръб е завършен, и дава възможност да се откроят линиите от фалшивите такива в изображението. След това фигуралните очертанията са насложени върху оригиналното изображение. следното уравнение се използва за Hough transformaciq за линии, както и 2-D  масив „акумулатор“ се създава за r и Q.
х cosQ + Y sinQ = R 
Относителните големи върхове в масива акумулатор са определени като линия и обратно до оригиналното изображение.
3.1.2.	Откриване на кръг
Кривите се откриват по същия начин като линиите но с използването на различно параметризиране. Формулата е:
(x - a)^2 + ( y – b)^2 = r^2
Където a и b са център на окръжност, а r радиусът. Създава се 3-D масив акумулатор и относителните върхове се третират като кръг.
3.2.	Обратно картографиране (back mapping)
Един от големите проблеми на Hough трансформацията е, че произвежда прекалено много информация, много от която е грешна. Обратното картографиране е добра техника за отстраняване на излишната информация без да се променят границите. След трансформацията акумулаторния масив се променя преди да се реконструира изображението. Една точка в оригиналното изображение отговаря само на една линия или един кръг, на който съответства най – добре. Когато точка от оригиналното изображение лежи на крива от параметричното пространство, изчислява се най-високият връх, а останалите клетки от кривата се игнорират, тоест се слагат с нулева стойност. Чрез тази техника върху оригиналното изображение остава само необходимата ни информация като степента на грешни данни намалява драстично.
4.	Текстон
Текстоните се дефинират като фундаментални микро структури на естествените изображения. Всяко такова изображение  се състои от текстони, а те са най – малкият елемент който хората могат да забележят. Затова ако могат да се намерят универсални текстони, които да могат да генерират всички текстури в естествения свят, като например азбуката на английски, тогава могат да се създадат много стабилни правила за сегментиране, класифициране и дори синтезиране на изображения. Leung и Malik дават оперативна дефиниция на текстон – клъстърен център в пространство отговарящо на филтър. Това не само позволява текстони да бъдат генерирани автоматично от изображения, но също създават възможността за универсално множество от текстони за всички изображения.
4.1.	Създаване на Текстонен речник
4.1.1.	Филтърни отговори
Първата стъпка е, че всички трениращи данни са определени да се конволюират с помощта на филтърна банка. 8 класа на монети са дадени в този проблем (1 ст. от пред/от зад, 5 ст. от пред/от зад, 10 ст.от пред/от зад и 50 ст. от пред/от зад монети), и всеки клас има 16 снимки с различни размери, вследствие на което общият брой на трениращите изображения е 128 изображения. Тук, 38 филтри се използват за да се конволюира дадени обучителни изображения. 
4.1.2.	K-means Clustering
Втората стъпка е като се използват дадени отговори, центровете на клъстерите да се намерят чрез използването на алгоритъм за векторно квантуване и в този проблем се използва K-means алгоритъм. Ако имаме размер на изображение 100 на 100 и имаме 8 филтър отговора, тогава общо 10000 8-вектора представляват едно изображение. Затова е скъпо и е необходимо да се редуцира репрезентацията на данни. Leung и Malik забелязали, че филтър отговорите не са напълно различни при всеки пиксел над текстура и трябва да има няколко различни фълтър отговорни вектора, а всички останали са техни „шумни“ вариации. Затова K-means подход може да предложи малко множество от прототипни филтър отговори и центровете на клъстери се считат за представляващи вектор отговарящ за тях.
Вариации
Тези филтър отговори са всички свързани зиображения, затова те се конкратенират за да се получат К клъстерни центъра, така наречените текстони.
4.2.	Моделиране на статистическа хистограма
Всеки клас има 4 обучителни изображения от всякакви осветяващи условия. Те се използвата за построяването на една хистограма. Ние имаме 8 класа, за това ще бъдат генерирани 8 хистограми. Всеки пиксел от дадено изображение се слага до най – близкия текстон в речникът, който вече имаме. Затова на всеки пиксел се слага точно едно текстоново число и хистограмата се нормализира за да се построи вероятностна плътностна функция (PDF). Интересен факт е, че всички хистограмни графи  на статистически модели  са близки а PDF на нестотинки са очевидно различни. Това ни позволява да класифицираме стотинки и нестотинки само сравнявайки хистограмите им.
4.3.	Експерименти и резултати от класифициране на текстони
Тук са някакви цифри, подозирам, че при нас са различни….
4.4.	Дискусия около класифицирането на текстони
Най-големият проблем при класифицирането е скалирането. Ако размерите на тестовото множество са значително по – различни от размерите на учебното множество, нивото на вярност намалява. Възможно решение за този проблем е да добавим повече учебни изображения с различни размери, но така статистическият модел може да се промени. Ако размерите на изображенията се намалят, то тогава изпълнението ще се подобри. Друг проблем е, че класификатора на текстони има нужда от детайлни пространствени характеристики за да тества изображения. Последният проблем е, че в естествено изображение има относително много изображения на нестотинки със същите пространствени характеристики  като на стотинки. И тъй като класификаторът не разчита на цвят на соттинките, нестотинки с лице или малък текст в тях ще бъдат разпознати като стотинки.
